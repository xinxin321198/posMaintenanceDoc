选一个mobile UI框架
根据pos编号或者商家名称查找pos机信息的一个界面，关联出商家信息
填写pos机维护信息
确认保存
已完成

pos机维护功能 1天
登录系统，属于自己的pos机的维护信息，进行反馈评价 1天
商家维护功能 1天
pos机维护记录的查看 1天
pos机维护记录图表 1天
权限功能完善 1天


写一个技术方案，搭一个框架出来跑系统


POS机维护回访系统需求分析：

维护人员端（手机）：输入维护员帐号密码登录；输入pos机终端编号（显示商户名称，地址，电话，联系人）填入维护情况信息（是否正常使用，若不正常则填入维护情况）
客户端（手机）：输入pos机终端编号，密码登录，可输入反馈信息（服务需求）

公司端：用电脑ie登录；一，可编辑查看客户信息（商户名称，地址，电话，联系人，备注）；
二，可编辑维护人员；
三，可查看客户使用情况；
四，查看回访情况及维护记录

银行端：用电脑IE登录，可看统计：在一段可选 的时间段内，维护的有多少家，没有维护的有几家。






选用开源框架SpringWind进行开发

http://git.oschina.net/juapk/SpringWind
SpringWind框架集成了J2ee开发的常规经典搭配SSM 架构核心库，打造一个完美的 Spring+SpringMVC+MyBatis 架构生态圈。 

spring 
1.方便解耦，简化开发
通过Spring提供的IoC容器，我们可以将对象之间的依赖关系交由Spring进行控制，避免硬编码所造成的过度程序耦合。有了Spring，用户不必再为单实例模式类、属性文件解析等这些很底层的需求编写代码，可以更专注于上层的应用。
2.AOP编程的支持
通过Spring提供的AOP功能，方便进行面向切面的编程，许多不容易用传统OOP实现的功能可以通过AOP轻松应付。
3.声明式事务的支持
在Spring中，我们可以从单调烦闷的事务管理代码中解脱出来，通过声明式方式灵活地进行事务的管理，提高开发效率和质量。
4.方便程序的测试
可以用非容器依赖的编程方式进行几乎所有的测试工作，在Spring里，测试不再是昂贵的操作，而是随手可做的事情。例如：Spring对Junit4支持，可以通过注解方便的测试Spring程序。
5.方便集成各种优秀框架
Spring不排斥各种优秀的开源框架，相反，Spring可以降低各种框架的使用难度，Spring提供了对各种优秀框架（如Struts,Hibernate、Hessian、Quartz）等的直接支持。
6.降低Java EE API的使用难度
Spring对很多难用的Java EE API（如JDBC，JavaMail，远程调用等）提供了一个薄薄的封装层，通过Spring的简易封装，这些Java EE API的使用难度大为降低。
7.Java 源码是经典学习范例
Spring的源码设计精妙、结构清晰、匠心独用，处处体现着大师对Java设计模式灵活运用以及对Java技术的高深造诣。Spring框架源码无疑是Java技术的最佳实践范例。如果想在短时间内迅速提高自己的Java技术水平和应用开发水平，学习和研究Spring源码将会使你收到意想不到的效果。


spring-mvc
Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的SpringMVC框架或集成其他MVC开发框架，如Struts1，Struts2等。
它是一个典型的教科书式的mvc构架，而不像struts等都是变种或者不是完全基于mvc系统的框架，对于初学者或者想了解mvc的人来说我觉得 spring是最好的，它的实现就是教科书！第二它和tapestry一样是一个纯正的servlet系统，这也是它和tapestry相比 struts所没有的优势。而且框架本身有代码，看起来容易理解。

MyBatis
MyBatis 是支持普通 SQL查询，存储过程和高级映射的优秀持久层框架。MyBatis 消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis 使用简单的 XML或注解用于配置和原始映射，将接口和 Java 的POJOs（Plain Old Java Objects，普通的 Java对象）映射成数据库中的记录。
每个MyBatis应用程序主要都是使用SqlSessionFactory实例的，一个SqlSessionFactory实例可以通过SqlSessionFactoryBuilder获得。SqlSessionFactoryBuilder可以从一个xml配置文件或者一个预定义的配置类的实例获得。
用xml文件构建SqlSessionFactory实例是非常简单的事情。推荐在这个配置中使用类路径资源（classpath resource)，但你可以使用任何Reader实例，包括用文件路径或file://开头的url创建的实例。MyBatis有一个实用类----Resources，它有很多方法，可以方便地从类路径及其它位置加载资源。

Velocity
Velocity是一个基于java的模板引擎（template engine）。它允许任何人仅仅使用简单的模板语言（template language）来引用由java代码定义的对象。
应用
当Velocity应用于web开发时，界面设计人员可以和java程序开发人员同步开发一个遵循MVC架构的web站点，也就是说，页面设计人员可以只关注页面的显示效果，而由java程序开发人员关注业务逻辑编码。Velocity将java代码从web页面中分离出来，这样为web站点的长期维护提供了便利，同时也为我们在JSP和PHP之外又提供了一种可选的方案。
更多功能
Velocity的能力远不止web站点开发这个领域，例如，它可以从模板（template）产生SQL和PostScript、XML，它也可以被当作一个独立工具来产生源代码和报告，或者作为其他系统的集成组件使用。Velocity也可以为Turbine web开发架构提供模板服务（template service）。Velocity+Turbine提供一个模板服务的方式允许一个web应用以一个真正的MVC模型进行开发。

fastjson 
fastjson是java库，可以用来转换成java对象的JSON表示。它也可以用来转换为等效的java对象的JSON字符串。fastjson可以任意的java对象包括预先存在的对象，你没有源代码的工作。

quartz 
Quartz是OpenSymphony开源组织在Job scheduling领域又一个开源项目，它可以与J2EE与J2SE应用程序相结合也可以单独使用。Quartz是一个完全由java编写的开源作业调度框架。Quartz可以用来创建简单或为运行十个，百个，甚至是好几万个Jobs这样复杂的程序。Jobs可以做成标准的Java组件或 EJBs。Quartz的最新版本为Quartz 2.2.3。


前端框架
jquery
jQuery是一个兼容多浏览器的javascript库，核心理念是write less,do more(写得更少,做得更多)。jQuery是免费、开源的，使用MIT许可协议。jQuery的语法设计可以使开发更加便捷，例如操作文档对象、选择DOM元素、制作动画效果、事件处理、使用Ajax以及其他功能。除此以外，jQuery提供API让开发者编写插件。其模块化的使用方式使开发者可以很轻松的开发出功能强大的静态或动态网页。




Bootstrap
Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。[1]  它由Twitter的设计师Mark Otto和Jacob Thornton合作开发，是一个CSS/HTML框架。Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。Bootstrap一经推出后颇受欢迎，一直是GitHub上的热门开源项目，包括NASA的MSNBC（微软全国广播公司）的Breaking News都使用了该项目。[2]  国内一些移动开发者较为熟悉的框架，如WeX5前端开源框架等，也是基于Bootstrap源码进行性能优化而来。
Bootstrap是基于HTML5和CSS3开发的，它在jQuery的基础上进行了更为个性化和人性化的完善，形成一套自己独有的网站风格，并兼容大部分jQuery插件。

响应式布局
响应式布局是Ethan Marcotte在2010年5月份提出的一个概念，简而言之，就是一个网站能够兼容多个终端――而不是为每个终端做一个特定的版本。这个概念是为解决移动互联网浏览而诞生的。
响应式布局可以为不同终端的用户提供更加舒适的界面和更好的用户体验，而且随着目前大屏幕移动设备的普及，用“大势所趋”来形容也不为过。随着越来越多的设计师采用这个技术，我们不仅看到很多的创新，还看到了一些成形的模式。
优点：[1] 
面对不同分辨率设备灵活性强
能够快捷解决多设备显示适应问题
缺点：[1] 
兼容各种设备工作量大，效率低下
代码累赘，会出现隐藏无用的元素，加载时间加长
其实这是一种折中性质的设计解决方案，多方面因素影响而达不到最佳效果
一定程度上改变了网站原有的布局结构，会出现用户混淆的情况


使用HTML5开发整个项目，直接使用一站式的解决方案，即只要基于HTML5标准的浏览器的设备，都可以访问此项目（如:PC端或移动端的Firefox、chrome、opera等主流浏览器，微信里内嵌的X5内核浏览器）
HTML5是用于取代1999年所制定的 HTML 4.01 和 XHTML 1.0的标准通用标记语言。是新一代的支持移动互联网网页开发技术。HTML5拥有良好的页面表现性能和跨平台兼容性。

　　HTML5它的开发是通过谷歌、苹果，诺基亚、中国移动等几百家公司一起酝酿的技术，这个技术最大的好处在于它是一个公开的技术。是现实的网络标准，这意味着它将大大降低用户的开发成本和跨平台兼容性。比如你开发了一款HTML5应用，可以很轻易地移植到UC的开放平台、Opera的开发平台、Facebook应用平台，甚至可以通过封装的技术发放到App Store或Google Play上，所以它的跨平台非常强大，也是大多数人对HTML5有兴趣的主要原因。

　　同时，HTML5可以很好解决多种型号显示屏幕的兼容性问题，通过一次设计，即可普遍兼容很多大小不一致的显示设备，这解决了其他开发技术需要针对不同大小的屏幕分别开发界面得难题，传统上非HTML5技术开发的程序会面临很多显示的问题，例如IPHONE与IPAD的屏幕就需要分别设计，这将导致用户的开发成本急剧上升。

　　但由于HTML5技术无法对硬件底层的功能进行调用，所以限制了HTML5技术的应用，这将导致需要系统底层来支持的功能无法通过HTML5技术来实现。

　　原生应用开发技术，可访问手机所有功能(GPS、摄像头)，速度更快、性能高、整体用户体验不错，而且是用Java 编写的。原生应用是特别为某种操作系统开发的，比如iOS、Android、黑莓等等，它们是在各自的移动设备上运行的。

　　原生应用由于采用一行一行手写代码的方式开发，所以它的开发周期比较长，成本比较高，并且原生应用没有夸平台兼容的能力，所以针对每个平台都要完全重新开发，例如安卓平台需要开发一次，IOS平台需要开发一次，甚至针对各种安卓的设备、各种使用不同硬件的安卓设备，它们的屏幕、CPU、操作系统不同，也需要针对这些不同的机型开展相应的开发工作。

　　结论：

　　1、 预算有限的情况下，建议选择HTML5技术;

　　2、 用户体验要求高的情况下，更适合原生技术;

　　3、 开发速度要求快的情况下，建议选择HTML5技术;

　　4、 必须用到某个HTML5不支持的系统功能的情况下，适合原生技术。




JSP的优缺点大集合
　JSP（JavaServer Pages）是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。JSP技术有点类似ASP技术，它是在传统的网页HTML文件（*．htm，*．html）中插入Java程序段（Scriptlet）和JSP标记（tag），从而形成JSP文件（*．jsp）。
　　用JSP开发的Web应用是跨平台的，即能在Linux下运行，也能在其他操作系统上运行。
　　JSP技术使用Java编程语言编写类XML的tags和scriptlets，来封装产生动态网页的处理逻辑。网页还能通过tags和scriptlets访问存在于服务端的资源的应用逻辑。JSP将网页逻辑与网页设计和显示分离，支持可重用的基于组件的设计，使基于Web的应用程序的开发变得迅速和容易。
　　Web服务器在遇到访问JSP网页的请求时，首先执行其中的程序段，然后将执行结果连同JSP文件中的HTML代码一起返回给客户。插入的Java程序段可以操作数据库、重新定向网页等，以实现建立动态网页所需要的功能。
　　JSP与Java Servlet一样，是在服务器端执行的，通常返回该客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
　　JSP的1．0规范的最后版本是1999年9月推出的，12月又推出了1．1规范。目前较新的是JSP1．2规范，JSP2．0规范的征求意见稿也已出台。
　　JSP页面由HTML代码和嵌入其中的Java代码所组成。服务器在页面被客户端请求以后对这些Java代码进行处理，然后将生成的HTML页面返回给客户端的浏览器。Java Servlet 是JSP的技术基础，而且大型的Web应用程序的开发需要Java Servlet和JSP配合才能完成。JSP具备了Java技术的简单易用，完全的面向对象，具有平台无关性且安全可靠，主要面向因特网的所有特点，这是JSP的天然优势。
　　JSP的优势
　　（1）一次编写，到处运行。在这一点上Java比PHP更出色，除了系统之外，代码不用做任何更改。
　　（2）系统的多平台支持。基本上可以在所有平台上的任意环境中开发，在任意环境中进行系统部署，在任意环境中扩展。相比ASP/PHP的局限性是显而易见的。
　　（3）强大的可伸缩性。从只有一个小的Jar文件就可以运行Servlet/JSP，到由多台服务器进行集群和负载均衡，到多台Application进行事务处理，消息处理，一台服务器到无数台服务器，Java显示了一个巨大的生命力。
　　（4）多样化和功能强大的开发工具支持。这一点与ASP很像，Java已经有了许多非常优秀的开发工具，而且许多可以免费得到，并且其中许多已经可以顺利的运行于多种平台之下。
　　JSP的劣势
　　（1） 与ASP一样，Java的一些优势正是它致命的问题所在。正是由于为了跨平台的功能，为了极度的伸缩能力，所以极大的增加了产品的复杂性。
　　（2） Java的运行速度是用class常驻内存来完成的，所以它在一些情况下所使用的内存比起用户数量来说确实是“最低性能价格比”了。从另一方面，它还需要硬盘空间来储存一系列的。java文件和。class文件，以及对应的版本文件。

